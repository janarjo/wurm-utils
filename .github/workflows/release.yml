name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout master
      uses: actions/checkout@v4
      with:
        ref: master
        fetch-depth: 0 # Fetch all history for all branches and tags

    - name: Set up Git
      run: |
        git config user.name 'github-actions'
        git config user.email 'github-actions@github.com'

    - name: Get version from release tag
      id: get_version
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.inputs.version }} | sed 's/^v//')" >> $GITHUB_ENV

    - name: Fetch all branches
      run: git fetch --all

    # Start with a fresh check out of develop branch
    - name: Checkout develop and clean
      run: |
        git fetch origin
        git checkout develop
        git reset --hard origin/develop
        git clean -ffdx

    - name: Merge develop into master
      run: |
        git checkout master
        git reset --hard origin/master
        git clean -ffdx
        git merge develop --no-ff || git merge --abort

    - name: Bump version in package.json
      run: |
        git status && git diff
        npm version $RELEASE_VERSION

    - name: Push changes to master
      run: git push origin master --follow-tags

    - name: Merge master into develop
      run: |
        git checkout develop
        git merge master --no-ff

    - name: Push changes to develop
      run: |
        git push origin develop
  
  build:
    runs-on: ubuntu-latest
    needs: release
    env:
      CI: true
    
    steps:
    - name: Checkout master
      uses: actions/checkout@v4
      with:
        ref: master
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    
    - name: Install
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Test
      run: npm test
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
